rekor:
  namespace:
    name: rekor-system
    create: false
  server:
    image:
      registry: quay.io
      repository: securesign/rekor-server
      version: v1.2.2
      pullPolicy: IfNotPresent
    ingress:
      className: ""
      annotations:
        route.openshift.io/termination: "edge"
      hosts:
        - host: rekor.apps.open-svc-sts.k1wl.p1.openshiftapps.com
          path: /
  createtree:
    image:
      registry: quay.io
      repository: securesign/createtree
      version: v0.6.4
      pullPolicy: IfNotPresent
  backfillredis:
    image:
      registry: quay.io
      repository: securesign/backfill-redis
      version: v1.2.2
      pullPolicy: IfNotPresent

trillian:
  namespace:
    create: false
    name: trillian-system
  createdb:
    image:
      registry: quay.io
      repository: securesign/createdb
      version: v0.6.4
      pullPolicy: IfNotPresent
  initContainerImage:
    netcat:
      registry: quay.io
      repository: securesign/netcat
      version: v1.0.0
    curl:
      registry: registry.access.redhat.com
      repository: ubi9/ubi-minimal
      version: latest
      imagePullPolicy: IfNotPresent
  redis:
    args:
      - /usr/bin/run-redis
      - --bind
      - 0.0.0.0
      - --appendonly
      - "yes"
    image:
      registry: registry.redhat.io
      repository: rhel9/redis-6
      version: "sha256:031a5a63611e1e6a9fec47492a32347417263b79ad3b63bcee72fc7d02d64c94"
      pullPolicy: IfNotPresent

  logSigner:
    image:
      registry: quay.io
      repository: securesign/trillian_log_signer
      version: v1.2.2
      pullPolicy: IfNotPresent
  logServer:
    image:
      registry: quay.io
      repository: securesign/trillian_log_server
      version: v1.2.2
      pullPolicy: IfNotPresent
  mysql:
    gcp:
      scaffoldSQLProxy:
        registry: quay.io
        repository: securesign/cloudsqlproxy
        version: v0.6.4
    image:
      registry: quay.io
      repository: securesign/trillian-db
      version: v1.5.2
      pullPolicy: IfNotPresent
    args: []
    securityContext:
      fsGroup: 0
    livenessProbe:
      exec:
        command:
        - mysqladmin
        - ping
        - -h
        - localhost
        - -u
        - $(MYSQL_USER)
        - -p$(MYSQL_PASSWORD)
    readinessProbe:
      exec:
        command:
        - mysqladmin
        - ping
        - -h
        - localhost
        - -u
        - $(MYSQL_USER)
        - -p$(MYSQL_PASSWORD)
  initContainerImage:
    curl:
      registry: registry.access.redhat.com
      repository: ubi9/ubi-minimal
      version: "latest"
      imagePullPolicy: IfNotPresent

fulcio:
  namespace:
    name: fulcio-system
    create: false
  createcerts:
    enabled: true
    image:
      registry: quay.io
      repository: securesign/createcerts
      version: v0.6.4
      pullPolicy: IfNotPresent
  server:
    secret: fulcio-secret-rh
    image:
      registry: quay.io
      repository: securesign/fulcio
      version: v1.4.0
      pullPolicy: IfNotPresent
    ingress:
      http:
        annotations:
          route.openshift.io/termination: "edge"
        className: ""
        hosts:
          - host: fulcio.apps.open-svc-sts.k1wl.p1.openshiftapps.com
            path: /
  config:
    contents:
      OIDCIssuers:
        ? https://rh-oidc.s3.us-east-1.amazonaws.com/21o4ml1f5kchd6ee9nmh5dhc6efqba38
        : IssuerURL: https://rh-oidc.s3.us-east-1.amazonaws.com/21o4ml1f5kchd6ee9nmh5dhc6efqba38
          ClientID: sigstore
          Type: kubernetes
        ? https://keycloak-keycloak.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore
        : IssuerURL: https://keycloak-keycloak.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore
          ClientID: sigstore
          Type: email
        ? https://keycloak-keycloak-system.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore
        : IssuerURL: https://keycloak-keycloak-system.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore
          ClientID: sigstore
          Type: email
        ? https://keycloak-keycloak-system.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore-confidential
        : IssuerURL: https://keycloak-keycloak-system.apps.open-svc-sts.k1wl.p1.openshiftapps.com/auth/realms/sigstore-confidential
          ClientID: sigstore
          Type: email

tuf:
  deployment:
    registry: quay.io
    repository: securesign/tuf/server
    version: latest
  namespace:
    name: tuf-system
    create: false
  secrets:
    fulcio:
      name: fulcio-secret-rh
  enabled: true
  ingress:
    className: ""
    annotations:
      route.openshift.io/termination: "edge"
    http:
      hosts:
        - host: tuf.apps.open-svc-sts.k1wl.p1.openshiftapps.com
          path: /

ctlog:
  server:
    image:
      registry: quay.io
      repository: securesign/ct_server
      version: v0.6.4
      pullPolicy: IfNotPresent
  namespace:
    create: false
  createctconfig:
    backoffLimit: 30
    enabled: true
    initContainerImage:
      curl:
        registry: registry.access.redhat.com
        repository: ubi9/ubi-minimal
        version: latest
        imagePullPolicy: IfNotPresent
    image:
      registry: quay.io
      repository: securesign/createctconfig
      version: v0.6.4
      pullPolicy: IfNotPresent
  createtree:
    image:
      registry: quay.io
      repository: securesign/createtree
      version: v0.6.4
      pullPolicy: IfNotPresent

copySecretJob:
  enabled: true
  backoffLimit: 1000
