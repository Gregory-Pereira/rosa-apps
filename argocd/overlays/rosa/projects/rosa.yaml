apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: rosa
  labels:
    project-template: global
spec:
  destinations:
    - namespace: '*'
      server: '*'
    - namespace: openshift-gitops
      server: in-cluster
  sourceRepos:
    - '*'
    - 'https://github.com/redhat-et/*'
    - 'https://github.com/gregory-pereira/rosa-apps.git'
  roles:
    - name: project-admin
      description: Read/Write access to this project only
      policies:
        - p, proj:rosa:project-admin, applications, get, rosa/*, allow
        - p, proj:rosa:project-admin, applications, create, rosa/*, allow
        - p, proj:rosa:project-admin, applications, update, rosa/*, allow
        - p, proj:rosa:project-admin, applications, delete, rosa/*, allow
        - p, proj:rosa:project-admin, applications, sync, rosa/*, allow
        - p, proj:rosa:project-admin, applications, override, rosa/*, allow
        - p, proj:rosa:project-admin, applications, action/*, rosa/*, allow
      groups:
        - rosa
  namespaceResourceWhitelist:
    - group: ''
      kind: binding
    - group: ''
      kind: configmap
    - group: ''
      kind: endpoints
    - group: ''
      kind: event
    - group: ''
      kind: limitrange
    - group: ''
      kind: persistentvolumeclaim
    - group: ''
      kind: pod
    - group: ''
      kind: replicationcontroller
    - group: ''
      kind: resourcequota
    - group: ''
      kind: secret
    - group: ''
      kind: service
    - group: ''
      kind: serviceaccount
    - group: apps
      kind: controllerrevision
    - group: apps
      kind: daemonset
    - group: apps
      kind: deployment
    - group: apps
      kind: replicaset
    - group: apps
      kind: statefulset
    - group: apps.openshift.io
      kind: deploymentconfig
    - group: argoproj.io
      kind: application
    - group: argoproj.io
      kind: cronworkflow
    - group: argoproj.io
      kind: workflow
    - group: argoproj.io
      kind: workflowtemplate
    - group: authorization.openshift.io
      kind: role
    - group: authorization.openshift.io
      kind: rolebinding
    - group: authorization.openshift.io
      kind: rolebindingrestriction
    - group: autoscaling
      kind: horizontalpodautoscaler
    - group: batch
      kind: cronjob
    - group: batch
      kind: job
    - group: build.openshift.io
      kind: build
    - group: build.openshift.io
      kind: buildconfig
    - group: core.observatorium.io
      kind: observatorium
    - group: external-secrets.io
      kind: externalsecret
    - group: integreatly.org
      kind: grafana
    - group: integreatly.org
      kind: grafanadashboard
    - group: integreatly.org
      kind: grafanadatasource
    - group: kafka.strimzi.io
      kind: kafka
    - group: kafka.strimzi.io
      kind: kafkabridge
    - group: kafka.strimzi.io
      kind: kafkaconnect
    - group: kafka.strimzi.io
      kind: kafkaconnector
    - group: kafka.strimzi.io
      kind: kafkaconnects2i
    - group: kafka.strimzi.io
      kind: kafkamirrormaker
    - group: kafka.strimzi.io
      kind: kafkamirrormaker2
    - group: kafka.strimzi.io
      kind: kafkarebalance
    - group: kafka.strimzi.io
      kind: kafkatopic
    - group: kafka.strimzi.io
      kind: kafkauser
    - group: kfdef.apps.kubeflow.org
      kind: kfdef
    - group: logging.openshift.io
      kind: clusterlogforwarder
    - group: logging.openshift.io
      kind: clusterlogging
    - group: monitoring.coreos.com
      kind: alertmanager
    - group: monitoring.coreos.com
      kind: podmonitor
    - group: monitoring.coreos.com
      kind: prometheus
    - group: monitoring.coreos.com
      kind: prometheusrule
    - group: monitoring.coreos.com
      kind: servicemonitor
    - group: monitoring.coreos.com
      kind: thanosruler
    - group: policy
      kind: poddisruptionbudget
    - group: postgres-operator.crunchydata.com
      kind: postgrescluster
    - group: route.openshift.io
      kind: route
